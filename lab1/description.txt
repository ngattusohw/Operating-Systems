Nicholas Gattuso, Louis Rozencwajg-Hays, Kexian Wu
I pledge my honor that I have abided by the Stevens Honor System.

Task1::
	For task one, we created two new pthread_mutex's called grab_mutex and drop_mutex. When a diner goes to grab a fork, the grab_mutex locks, so that only one diner can grab the forks at a time. When the forks have been grabbed, the grab_mutex unlocks. The same is true for drop_mutex, where only one diner can drop the forks at a time. The drop_mutex also unlocks, when both forks have been released. 

Task2::
	We use use a condition variable to allow only 4 philosophers to attempt to eat at the same time. When one hungry philosopher attempts to grab the forks, we will first check if there are currently 4 philosophers attempting to eat. If that is the case, that philosopher has to wait until one of the others finishes eating. pthread_cond_wait will unlock the mutex just before the philosopher sleeps, but he will reacquire the mutex when he is signalled, before he wakes up. After being woken up, we will check the predicate again to determine whether it can safely proceed. If there are currently less than 4 philosophers attempting to grab the forks, that philosopher will be allowed to eat.




